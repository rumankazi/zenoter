name: Sync to Release Branch

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync:
    name: Sync main ‚Üí release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Sync to release branch
        run: |
          git fetch origin

          # Create release branch if it doesn't exist
          if ! git ls-remote --exit-code --heads origin release; then
            echo "üìù Creating release branch from main"
            git checkout -b release
            git push origin release
            echo "‚úÖ Release branch created"
            exit 0
          fi

          echo "üìù Syncing main ‚Üí release"
          git checkout -B release origin/release

          # Try to merge main into release
          if git merge origin/main --no-edit --no-ff -m "chore: sync main to release"; then
            echo "‚úÖ Clean merge successful"
            git push origin release
          else
            echo "‚ö†Ô∏è Merge conflict detected - resetting release to main"
            git merge --abort
            
            # Reset release to match main (main is source of truth)
            git reset --hard origin/main
            git push origin release --force
            
            echo "‚úÖ Release branch reset to main"
            echo "‚ÑπÔ∏è semantic-release will recreate version commits on next run"
          fi
