name: Release

on:
  push:
    branches:
      - release
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GIT_AUTHOR_NAME: rumankazi
          GIT_AUTHOR_EMAIL: kaziruman@gmail.com
          GIT_COMMITTER_NAME: rumankazi
          GIT_COMMITTER_EMAIL: kaziruman@gmail.com
        run: |
          # Run semantic-release and capture output
          OUTPUT=$(pnpm exec semantic-release 2>&1)
          echo "$OUTPUT"

          # Parse output for release information
          if echo "$OUTPUT" | grep -q "Published release"; then
            VERSION=$(echo "$OUTPUT" | grep -oP "Published release \K[0-9]+\.[0-9]+\.[0-9]+")
            echo "new-release-published=true" >> $GITHUB_OUTPUT
            echo "new-release-version=$VERSION" >> $GITHUB_OUTPUT
            echo "✅ New release published: v$VERSION"
          else
            echo "new-release-published=false" >> $GITHUB_OUTPUT
            echo "ℹ️  No release published"
          fi

      - name: Output release info
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          echo "🎉 New release published: v${{ steps.semantic.outputs.new-release-version }}"
