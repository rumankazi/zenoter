name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GIT_AUTHOR_NAME: rumankazi
          GIT_AUTHOR_EMAIL: kaziruman@gmail.com
          GIT_COMMITTER_NAME: rumankazi
          GIT_COMMITTER_EMAIL: kaziruman@gmail.com
        run: |
          echo "🚀 Starting semantic-release..."
          echo "📋 Repository: ${{ github.repository }}"
          echo "📋 Branch: ${{ github.ref_name }}"
          echo "📋 Commit: ${{ github.sha }}"
          echo ""

          # Run semantic-release with verbose output
          set +e  # Don't exit on error
          pnpm exec semantic-release --debug 2>&1 | tee semantic-release.log
          EXIT_CODE=${PIPESTATUS[0]}
          set -e

          echo ""
          echo "📊 Exit code: $EXIT_CODE"

          # Check if release was published
          if [ $EXIT_CODE -eq 0 ]; then
            if grep -q "Published release" semantic-release.log; then
              VERSION=$(grep -oP "Published release \K[0-9]+\.[0-9]+\.[0-9]+" semantic-release.log || echo "unknown")
              echo "new-release-published=true" >> $GITHUB_OUTPUT
              echo "new-release-version=$VERSION" >> $GITHUB_OUTPUT
              echo "✅ New release published: v$VERSION"
            else
              echo "new-release-published=false" >> $GITHUB_OUTPUT
              echo "ℹ️  No new release (no relevant commits or already released)"
            fi
          else
            echo "❌ semantic-release failed with exit code $EXIT_CODE"
            echo "📋 Check logs above for details"
            exit $EXIT_CODE
          fi

      - name: Output release info
        if: steps.semantic.outputs.new-release-published == 'true'
        run: |
          echo "🎉 New release published: v${{ steps.semantic.outputs.new-release-version }}"

      - name: Upload semantic-release logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: semantic-release-logs
          path: semantic-release.log
          retention-days: 1

      - name: Show failure summary
        if: failure()
        run: |
          echo "## ❌ Release Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Error Details" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          tail -50 semantic-release.log >> $GITHUB_STEP_SUMMARY || echo "Log file not found" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📋 Full logs available in artifacts" >> $GITHUB_STEP_SUMMARY
